
Lab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000061e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005aa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800100  00800100  0000061e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000061e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000650  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000690  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000082a  00000000  00000000  000006f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000715  00000000  00000000  00000f22  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a7  00000000  00000000  00001637  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a8  00000000  00000000  000019e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003bd  00000000  00000000  00001a88  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000068  00000000  00000000  00001e45  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00001ead  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 99 00 	jmp	0x132	; 0x132 <__vector_21>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a3 30       	cpi	r26, 0x03	; 3
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 8c 00 	call	0x118	; 0x118 <main>
  88:	0c 94 d3 02 	jmp	0x5a6	; 0x5a6 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <mapADCtoServo>:
uint16_t dutyCycle = 0;

void setup(void);

uint16_t mapADCtoServo(uint8_t valor_ADC){
	return (uint16_t)(((float)valor_ADC/255)*(124.9-62.45)+62.45);
  90:	68 2f       	mov	r22, r24
  92:	70 e0       	ldi	r23, 0x00	; 0
  94:	80 e0       	ldi	r24, 0x00	; 0
  96:	90 e0       	ldi	r25, 0x00	; 0
  98:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <__floatunsisf>
  9c:	20 e0       	ldi	r18, 0x00	; 0
  9e:	30 e0       	ldi	r19, 0x00	; 0
  a0:	4f e7       	ldi	r20, 0x7F	; 127
  a2:	53 e4       	ldi	r21, 0x43	; 67
  a4:	0e 94 37 01 	call	0x26e	; 0x26e <__divsf3>
  a8:	2d ec       	ldi	r18, 0xCD	; 205
  aa:	3c ec       	ldi	r19, 0xCC	; 204
  ac:	49 e7       	ldi	r20, 0x79	; 121
  ae:	52 e4       	ldi	r21, 0x42	; 66
  b0:	0e 94 66 02 	call	0x4cc	; 0x4cc <__mulsf3>
  b4:	2d ec       	ldi	r18, 0xCD	; 205
  b6:	3c ec       	ldi	r19, 0xCC	; 204
  b8:	49 e7       	ldi	r20, 0x79	; 121
  ba:	52 e4       	ldi	r21, 0x42	; 66
  bc:	0e 94 cb 00 	call	0x196	; 0x196 <__addsf3>
  c0:	0e 94 a9 01 	call	0x352	; 0x352 <__fixunssfsi>
}
  c4:	cb 01       	movw	r24, r22
  c6:	08 95       	ret

000000c8 <init_ADC>:
		updateDutyCycleA(dutyCycle);
    }
}

void init_ADC(void){
	ADMUX = 0;
  c8:	ec e7       	ldi	r30, 0x7C	; 124
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	10 82       	st	Z, r1
	// Vref = AVCC = 5V
	ADMUX |= (1<<REFS0);
  ce:	80 81       	ld	r24, Z
  d0:	80 64       	ori	r24, 0x40	; 64
  d2:	80 83       	st	Z, r24
	
	// Justificado a la izquierda
	ADMUX |= (1<<ADLAR);
  d4:	80 81       	ld	r24, Z
  d6:	80 62       	ori	r24, 0x20	; 32
  d8:	80 83       	st	Z, r24
	
	// Selección del canal A7
	ADMUX |= 0x07;
  da:	80 81       	ld	r24, Z
  dc:	87 60       	ori	r24, 0x07	; 7
  de:	80 83       	st	Z, r24
	
	ADCSRA = 0;
  e0:	ea e7       	ldi	r30, 0x7A	; 122
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	10 82       	st	Z, r1
	
	// Habilitar ADC
	ADCSRA = (1<<ADEN);
  e6:	80 e8       	ldi	r24, 0x80	; 128
  e8:	80 83       	st	Z, r24
	
	// Habilitar auto-trigger
	ADCSRA |= (1<<ADATE);
  ea:	80 81       	ld	r24, Z
  ec:	80 62       	ori	r24, 0x20	; 32
  ee:	80 83       	st	Z, r24
	
	// Máscara de la interrupción del ADC
	ADCSRA |= (1<<ADIE);
  f0:	80 81       	ld	r24, Z
  f2:	88 60       	ori	r24, 0x08	; 8
  f4:	80 83       	st	Z, r24
	
	// Prescaler del ADC a 128
	ADCSRA |= (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
  f6:	80 81       	ld	r24, Z
  f8:	87 60       	ori	r24, 0x07	; 7
  fa:	80 83       	st	Z, r24
	
	ADCSRB = 0;
  fc:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7f807b>
	
	// Iniciar primera conversión
	ADCSRA |= (1<<ADSC);
 100:	80 81       	ld	r24, Z
 102:	80 64       	ori	r24, 0x40	; 64
 104:	80 83       	st	Z, r24
 106:	08 95       	ret

00000108 <setup>:
	
}

void setup(void){
	cli();
 108:	f8 94       	cli
	DDRC = 0;
 10a:	17 b8       	out	0x07, r1	; 7
	init_PWM1_Fast();
 10c:	0e 94 a9 00 	call	0x152	; 0x152 <init_PWM1_Fast>
	init_ADC();
 110:	0e 94 64 00 	call	0xc8	; 0xc8 <init_ADC>
	sei();
 114:	78 94       	sei
 116:	08 95       	ret

00000118 <main>:
}

int main(void)
{
    /* Replace with your application code */
	setup();
 118:	0e 94 84 00 	call	0x108	; 0x108 <setup>
    while (1) 
    {
		dutyCycle = mapADCtoServo(valor_pot);
 11c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <valor_pot>
 120:	0e 94 48 00 	call	0x90	; 0x90 <mapADCtoServo>
 124:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 128:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		updateDutyCycleA(dutyCycle);
 12c:	0e 94 c5 00 	call	0x18a	; 0x18a <updateDutyCycleA>
 130:	f5 cf       	rjmp	.-22     	; 0x11c <main+0x4>

00000132 <__vector_21>:
	init_PWM1_Fast();
	init_ADC();
	sei();
}

ISR(ADC_vect){
 132:	1f 92       	push	r1
 134:	0f 92       	push	r0
 136:	0f b6       	in	r0, 0x3f	; 63
 138:	0f 92       	push	r0
 13a:	11 24       	eor	r1, r1
 13c:	8f 93       	push	r24
	valor_pot = ADCH;
 13e:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 142:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <valor_pot>
}
 146:	8f 91       	pop	r24
 148:	0f 90       	pop	r0
 14a:	0f be       	out	0x3f, r0	; 63
 14c:	0f 90       	pop	r0
 14e:	1f 90       	pop	r1
 150:	18 95       	reti

00000152 <init_PWM1_Fast>:
 */ 

#include "PWM1.h"

void init_PWM1_Fast(void){
	DDRB |= (1 << DDB1);
 152:	84 b1       	in	r24, 0x04	; 4
 154:	82 60       	ori	r24, 0x02	; 2
 156:	84 b9       	out	0x04, r24	; 4
	
	TCCR1A = 0;
 158:	a0 e8       	ldi	r26, 0x80	; 128
 15a:	b0 e0       	ldi	r27, 0x00	; 0
 15c:	1c 92       	st	X, r1
	TCCR1B = 0;
 15e:	e1 e8       	ldi	r30, 0x81	; 129
 160:	f0 e0       	ldi	r31, 0x00	; 0
 162:	10 82       	st	Z, r1
	TCCR1A |= (1<<COM1A1);
 164:	8c 91       	ld	r24, X
 166:	80 68       	ori	r24, 0x80	; 128
 168:	8c 93       	st	X, r24
	
	TCCR1A |= (1<<WGM11);
 16a:	8c 91       	ld	r24, X
 16c:	82 60       	ori	r24, 0x02	; 2
 16e:	8c 93       	st	X, r24
	TCCR1B |= (1<<WGM12)|(1<<WGM13);
 170:	80 81       	ld	r24, Z
 172:	88 61       	ori	r24, 0x18	; 24
 174:	80 83       	st	Z, r24
	
	//PRESCALER DE 256
	TCCR1B |= (1<<CS12);
 176:	80 81       	ld	r24, Z
 178:	84 60       	ori	r24, 0x04	; 4
 17a:	80 83       	st	Z, r24
	
	
	//TOP DE 1249
	TCNT1L = 0xE1;
 17c:	81 ee       	ldi	r24, 0xE1	; 225
 17e:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	TCNT1H = 0x04;
 182:	84 e0       	ldi	r24, 0x04	; 4
 184:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 188:	08 95       	ret

0000018a <updateDutyCycleA>:
}

void updateDutyCycleA(uint16_t duty){
	OCR1AL = duty;
 18a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	OCR1AH = duty>>8;
 18e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 192:	08 95       	ret

00000194 <__subsf3>:
 194:	50 58       	subi	r21, 0x80	; 128

00000196 <__addsf3>:
 196:	bb 27       	eor	r27, r27
 198:	aa 27       	eor	r26, r26
 19a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <__addsf3x>
 19e:	0c 94 2c 02 	jmp	0x458	; 0x458 <__fp_round>
 1a2:	0e 94 1e 02 	call	0x43c	; 0x43c <__fp_pscA>
 1a6:	38 f0       	brcs	.+14     	; 0x1b6 <__addsf3+0x20>
 1a8:	0e 94 25 02 	call	0x44a	; 0x44a <__fp_pscB>
 1ac:	20 f0       	brcs	.+8      	; 0x1b6 <__addsf3+0x20>
 1ae:	39 f4       	brne	.+14     	; 0x1be <__addsf3+0x28>
 1b0:	9f 3f       	cpi	r25, 0xFF	; 255
 1b2:	19 f4       	brne	.+6      	; 0x1ba <__addsf3+0x24>
 1b4:	26 f4       	brtc	.+8      	; 0x1be <__addsf3+0x28>
 1b6:	0c 94 1b 02 	jmp	0x436	; 0x436 <__fp_nan>
 1ba:	0e f4       	brtc	.+2      	; 0x1be <__addsf3+0x28>
 1bc:	e0 95       	com	r30
 1be:	e7 fb       	bst	r30, 7
 1c0:	0c 94 15 02 	jmp	0x42a	; 0x42a <__fp_inf>

000001c4 <__addsf3x>:
 1c4:	e9 2f       	mov	r30, r25
 1c6:	0e 94 3d 02 	call	0x47a	; 0x47a <__fp_split3>
 1ca:	58 f3       	brcs	.-42     	; 0x1a2 <__addsf3+0xc>
 1cc:	ba 17       	cp	r27, r26
 1ce:	62 07       	cpc	r22, r18
 1d0:	73 07       	cpc	r23, r19
 1d2:	84 07       	cpc	r24, r20
 1d4:	95 07       	cpc	r25, r21
 1d6:	20 f0       	brcs	.+8      	; 0x1e0 <__addsf3x+0x1c>
 1d8:	79 f4       	brne	.+30     	; 0x1f8 <__addsf3x+0x34>
 1da:	a6 f5       	brtc	.+104    	; 0x244 <__addsf3x+0x80>
 1dc:	0c 94 5f 02 	jmp	0x4be	; 0x4be <__fp_zero>
 1e0:	0e f4       	brtc	.+2      	; 0x1e4 <__addsf3x+0x20>
 1e2:	e0 95       	com	r30
 1e4:	0b 2e       	mov	r0, r27
 1e6:	ba 2f       	mov	r27, r26
 1e8:	a0 2d       	mov	r26, r0
 1ea:	0b 01       	movw	r0, r22
 1ec:	b9 01       	movw	r22, r18
 1ee:	90 01       	movw	r18, r0
 1f0:	0c 01       	movw	r0, r24
 1f2:	ca 01       	movw	r24, r20
 1f4:	a0 01       	movw	r20, r0
 1f6:	11 24       	eor	r1, r1
 1f8:	ff 27       	eor	r31, r31
 1fa:	59 1b       	sub	r21, r25
 1fc:	99 f0       	breq	.+38     	; 0x224 <__addsf3x+0x60>
 1fe:	59 3f       	cpi	r21, 0xF9	; 249
 200:	50 f4       	brcc	.+20     	; 0x216 <__addsf3x+0x52>
 202:	50 3e       	cpi	r21, 0xE0	; 224
 204:	68 f1       	brcs	.+90     	; 0x260 <__addsf3x+0x9c>
 206:	1a 16       	cp	r1, r26
 208:	f0 40       	sbci	r31, 0x00	; 0
 20a:	a2 2f       	mov	r26, r18
 20c:	23 2f       	mov	r18, r19
 20e:	34 2f       	mov	r19, r20
 210:	44 27       	eor	r20, r20
 212:	58 5f       	subi	r21, 0xF8	; 248
 214:	f3 cf       	rjmp	.-26     	; 0x1fc <__addsf3x+0x38>
 216:	46 95       	lsr	r20
 218:	37 95       	ror	r19
 21a:	27 95       	ror	r18
 21c:	a7 95       	ror	r26
 21e:	f0 40       	sbci	r31, 0x00	; 0
 220:	53 95       	inc	r21
 222:	c9 f7       	brne	.-14     	; 0x216 <__addsf3x+0x52>
 224:	7e f4       	brtc	.+30     	; 0x244 <__addsf3x+0x80>
 226:	1f 16       	cp	r1, r31
 228:	ba 0b       	sbc	r27, r26
 22a:	62 0b       	sbc	r22, r18
 22c:	73 0b       	sbc	r23, r19
 22e:	84 0b       	sbc	r24, r20
 230:	ba f0       	brmi	.+46     	; 0x260 <__addsf3x+0x9c>
 232:	91 50       	subi	r25, 0x01	; 1
 234:	a1 f0       	breq	.+40     	; 0x25e <__addsf3x+0x9a>
 236:	ff 0f       	add	r31, r31
 238:	bb 1f       	adc	r27, r27
 23a:	66 1f       	adc	r22, r22
 23c:	77 1f       	adc	r23, r23
 23e:	88 1f       	adc	r24, r24
 240:	c2 f7       	brpl	.-16     	; 0x232 <__addsf3x+0x6e>
 242:	0e c0       	rjmp	.+28     	; 0x260 <__addsf3x+0x9c>
 244:	ba 0f       	add	r27, r26
 246:	62 1f       	adc	r22, r18
 248:	73 1f       	adc	r23, r19
 24a:	84 1f       	adc	r24, r20
 24c:	48 f4       	brcc	.+18     	; 0x260 <__addsf3x+0x9c>
 24e:	87 95       	ror	r24
 250:	77 95       	ror	r23
 252:	67 95       	ror	r22
 254:	b7 95       	ror	r27
 256:	f7 95       	ror	r31
 258:	9e 3f       	cpi	r25, 0xFE	; 254
 25a:	08 f0       	brcs	.+2      	; 0x25e <__addsf3x+0x9a>
 25c:	b0 cf       	rjmp	.-160    	; 0x1be <__addsf3+0x28>
 25e:	93 95       	inc	r25
 260:	88 0f       	add	r24, r24
 262:	08 f0       	brcs	.+2      	; 0x266 <__addsf3x+0xa2>
 264:	99 27       	eor	r25, r25
 266:	ee 0f       	add	r30, r30
 268:	97 95       	ror	r25
 26a:	87 95       	ror	r24
 26c:	08 95       	ret

0000026e <__divsf3>:
 26e:	0e 94 4b 01 	call	0x296	; 0x296 <__divsf3x>
 272:	0c 94 2c 02 	jmp	0x458	; 0x458 <__fp_round>
 276:	0e 94 25 02 	call	0x44a	; 0x44a <__fp_pscB>
 27a:	58 f0       	brcs	.+22     	; 0x292 <__divsf3+0x24>
 27c:	0e 94 1e 02 	call	0x43c	; 0x43c <__fp_pscA>
 280:	40 f0       	brcs	.+16     	; 0x292 <__divsf3+0x24>
 282:	29 f4       	brne	.+10     	; 0x28e <__divsf3+0x20>
 284:	5f 3f       	cpi	r21, 0xFF	; 255
 286:	29 f0       	breq	.+10     	; 0x292 <__divsf3+0x24>
 288:	0c 94 15 02 	jmp	0x42a	; 0x42a <__fp_inf>
 28c:	51 11       	cpse	r21, r1
 28e:	0c 94 60 02 	jmp	0x4c0	; 0x4c0 <__fp_szero>
 292:	0c 94 1b 02 	jmp	0x436	; 0x436 <__fp_nan>

00000296 <__divsf3x>:
 296:	0e 94 3d 02 	call	0x47a	; 0x47a <__fp_split3>
 29a:	68 f3       	brcs	.-38     	; 0x276 <__divsf3+0x8>

0000029c <__divsf3_pse>:
 29c:	99 23       	and	r25, r25
 29e:	b1 f3       	breq	.-20     	; 0x28c <__divsf3+0x1e>
 2a0:	55 23       	and	r21, r21
 2a2:	91 f3       	breq	.-28     	; 0x288 <__divsf3+0x1a>
 2a4:	95 1b       	sub	r25, r21
 2a6:	55 0b       	sbc	r21, r21
 2a8:	bb 27       	eor	r27, r27
 2aa:	aa 27       	eor	r26, r26
 2ac:	62 17       	cp	r22, r18
 2ae:	73 07       	cpc	r23, r19
 2b0:	84 07       	cpc	r24, r20
 2b2:	38 f0       	brcs	.+14     	; 0x2c2 <__divsf3_pse+0x26>
 2b4:	9f 5f       	subi	r25, 0xFF	; 255
 2b6:	5f 4f       	sbci	r21, 0xFF	; 255
 2b8:	22 0f       	add	r18, r18
 2ba:	33 1f       	adc	r19, r19
 2bc:	44 1f       	adc	r20, r20
 2be:	aa 1f       	adc	r26, r26
 2c0:	a9 f3       	breq	.-22     	; 0x2ac <__divsf3_pse+0x10>
 2c2:	35 d0       	rcall	.+106    	; 0x32e <__divsf3_pse+0x92>
 2c4:	0e 2e       	mov	r0, r30
 2c6:	3a f0       	brmi	.+14     	; 0x2d6 <__divsf3_pse+0x3a>
 2c8:	e0 e8       	ldi	r30, 0x80	; 128
 2ca:	32 d0       	rcall	.+100    	; 0x330 <__divsf3_pse+0x94>
 2cc:	91 50       	subi	r25, 0x01	; 1
 2ce:	50 40       	sbci	r21, 0x00	; 0
 2d0:	e6 95       	lsr	r30
 2d2:	00 1c       	adc	r0, r0
 2d4:	ca f7       	brpl	.-14     	; 0x2c8 <__divsf3_pse+0x2c>
 2d6:	2b d0       	rcall	.+86     	; 0x32e <__divsf3_pse+0x92>
 2d8:	fe 2f       	mov	r31, r30
 2da:	29 d0       	rcall	.+82     	; 0x32e <__divsf3_pse+0x92>
 2dc:	66 0f       	add	r22, r22
 2de:	77 1f       	adc	r23, r23
 2e0:	88 1f       	adc	r24, r24
 2e2:	bb 1f       	adc	r27, r27
 2e4:	26 17       	cp	r18, r22
 2e6:	37 07       	cpc	r19, r23
 2e8:	48 07       	cpc	r20, r24
 2ea:	ab 07       	cpc	r26, r27
 2ec:	b0 e8       	ldi	r27, 0x80	; 128
 2ee:	09 f0       	breq	.+2      	; 0x2f2 <__divsf3_pse+0x56>
 2f0:	bb 0b       	sbc	r27, r27
 2f2:	80 2d       	mov	r24, r0
 2f4:	bf 01       	movw	r22, r30
 2f6:	ff 27       	eor	r31, r31
 2f8:	93 58       	subi	r25, 0x83	; 131
 2fa:	5f 4f       	sbci	r21, 0xFF	; 255
 2fc:	3a f0       	brmi	.+14     	; 0x30c <__divsf3_pse+0x70>
 2fe:	9e 3f       	cpi	r25, 0xFE	; 254
 300:	51 05       	cpc	r21, r1
 302:	78 f0       	brcs	.+30     	; 0x322 <__divsf3_pse+0x86>
 304:	0c 94 15 02 	jmp	0x42a	; 0x42a <__fp_inf>
 308:	0c 94 60 02 	jmp	0x4c0	; 0x4c0 <__fp_szero>
 30c:	5f 3f       	cpi	r21, 0xFF	; 255
 30e:	e4 f3       	brlt	.-8      	; 0x308 <__divsf3_pse+0x6c>
 310:	98 3e       	cpi	r25, 0xE8	; 232
 312:	d4 f3       	brlt	.-12     	; 0x308 <__divsf3_pse+0x6c>
 314:	86 95       	lsr	r24
 316:	77 95       	ror	r23
 318:	67 95       	ror	r22
 31a:	b7 95       	ror	r27
 31c:	f7 95       	ror	r31
 31e:	9f 5f       	subi	r25, 0xFF	; 255
 320:	c9 f7       	brne	.-14     	; 0x314 <__divsf3_pse+0x78>
 322:	88 0f       	add	r24, r24
 324:	91 1d       	adc	r25, r1
 326:	96 95       	lsr	r25
 328:	87 95       	ror	r24
 32a:	97 f9       	bld	r25, 7
 32c:	08 95       	ret
 32e:	e1 e0       	ldi	r30, 0x01	; 1
 330:	66 0f       	add	r22, r22
 332:	77 1f       	adc	r23, r23
 334:	88 1f       	adc	r24, r24
 336:	bb 1f       	adc	r27, r27
 338:	62 17       	cp	r22, r18
 33a:	73 07       	cpc	r23, r19
 33c:	84 07       	cpc	r24, r20
 33e:	ba 07       	cpc	r27, r26
 340:	20 f0       	brcs	.+8      	; 0x34a <__divsf3_pse+0xae>
 342:	62 1b       	sub	r22, r18
 344:	73 0b       	sbc	r23, r19
 346:	84 0b       	sbc	r24, r20
 348:	ba 0b       	sbc	r27, r26
 34a:	ee 1f       	adc	r30, r30
 34c:	88 f7       	brcc	.-30     	; 0x330 <__divsf3_pse+0x94>
 34e:	e0 95       	com	r30
 350:	08 95       	ret

00000352 <__fixunssfsi>:
 352:	0e 94 45 02 	call	0x48a	; 0x48a <__fp_splitA>
 356:	88 f0       	brcs	.+34     	; 0x37a <__fixunssfsi+0x28>
 358:	9f 57       	subi	r25, 0x7F	; 127
 35a:	98 f0       	brcs	.+38     	; 0x382 <__fixunssfsi+0x30>
 35c:	b9 2f       	mov	r27, r25
 35e:	99 27       	eor	r25, r25
 360:	b7 51       	subi	r27, 0x17	; 23
 362:	b0 f0       	brcs	.+44     	; 0x390 <__fixunssfsi+0x3e>
 364:	e1 f0       	breq	.+56     	; 0x39e <__fixunssfsi+0x4c>
 366:	66 0f       	add	r22, r22
 368:	77 1f       	adc	r23, r23
 36a:	88 1f       	adc	r24, r24
 36c:	99 1f       	adc	r25, r25
 36e:	1a f0       	brmi	.+6      	; 0x376 <__fixunssfsi+0x24>
 370:	ba 95       	dec	r27
 372:	c9 f7       	brne	.-14     	; 0x366 <__fixunssfsi+0x14>
 374:	14 c0       	rjmp	.+40     	; 0x39e <__fixunssfsi+0x4c>
 376:	b1 30       	cpi	r27, 0x01	; 1
 378:	91 f0       	breq	.+36     	; 0x39e <__fixunssfsi+0x4c>
 37a:	0e 94 5f 02 	call	0x4be	; 0x4be <__fp_zero>
 37e:	b1 e0       	ldi	r27, 0x01	; 1
 380:	08 95       	ret
 382:	0c 94 5f 02 	jmp	0x4be	; 0x4be <__fp_zero>
 386:	67 2f       	mov	r22, r23
 388:	78 2f       	mov	r23, r24
 38a:	88 27       	eor	r24, r24
 38c:	b8 5f       	subi	r27, 0xF8	; 248
 38e:	39 f0       	breq	.+14     	; 0x39e <__fixunssfsi+0x4c>
 390:	b9 3f       	cpi	r27, 0xF9	; 249
 392:	cc f3       	brlt	.-14     	; 0x386 <__fixunssfsi+0x34>
 394:	86 95       	lsr	r24
 396:	77 95       	ror	r23
 398:	67 95       	ror	r22
 39a:	b3 95       	inc	r27
 39c:	d9 f7       	brne	.-10     	; 0x394 <__fixunssfsi+0x42>
 39e:	3e f4       	brtc	.+14     	; 0x3ae <__fixunssfsi+0x5c>
 3a0:	90 95       	com	r25
 3a2:	80 95       	com	r24
 3a4:	70 95       	com	r23
 3a6:	61 95       	neg	r22
 3a8:	7f 4f       	sbci	r23, 0xFF	; 255
 3aa:	8f 4f       	sbci	r24, 0xFF	; 255
 3ac:	9f 4f       	sbci	r25, 0xFF	; 255
 3ae:	08 95       	ret

000003b0 <__floatunsisf>:
 3b0:	e8 94       	clt
 3b2:	09 c0       	rjmp	.+18     	; 0x3c6 <__floatsisf+0x12>

000003b4 <__floatsisf>:
 3b4:	97 fb       	bst	r25, 7
 3b6:	3e f4       	brtc	.+14     	; 0x3c6 <__floatsisf+0x12>
 3b8:	90 95       	com	r25
 3ba:	80 95       	com	r24
 3bc:	70 95       	com	r23
 3be:	61 95       	neg	r22
 3c0:	7f 4f       	sbci	r23, 0xFF	; 255
 3c2:	8f 4f       	sbci	r24, 0xFF	; 255
 3c4:	9f 4f       	sbci	r25, 0xFF	; 255
 3c6:	99 23       	and	r25, r25
 3c8:	a9 f0       	breq	.+42     	; 0x3f4 <__floatsisf+0x40>
 3ca:	f9 2f       	mov	r31, r25
 3cc:	96 e9       	ldi	r25, 0x96	; 150
 3ce:	bb 27       	eor	r27, r27
 3d0:	93 95       	inc	r25
 3d2:	f6 95       	lsr	r31
 3d4:	87 95       	ror	r24
 3d6:	77 95       	ror	r23
 3d8:	67 95       	ror	r22
 3da:	b7 95       	ror	r27
 3dc:	f1 11       	cpse	r31, r1
 3de:	f8 cf       	rjmp	.-16     	; 0x3d0 <__floatsisf+0x1c>
 3e0:	fa f4       	brpl	.+62     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3e2:	bb 0f       	add	r27, r27
 3e4:	11 f4       	brne	.+4      	; 0x3ea <__floatsisf+0x36>
 3e6:	60 ff       	sbrs	r22, 0
 3e8:	1b c0       	rjmp	.+54     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3ea:	6f 5f       	subi	r22, 0xFF	; 255
 3ec:	7f 4f       	sbci	r23, 0xFF	; 255
 3ee:	8f 4f       	sbci	r24, 0xFF	; 255
 3f0:	9f 4f       	sbci	r25, 0xFF	; 255
 3f2:	16 c0       	rjmp	.+44     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3f4:	88 23       	and	r24, r24
 3f6:	11 f0       	breq	.+4      	; 0x3fc <__floatsisf+0x48>
 3f8:	96 e9       	ldi	r25, 0x96	; 150
 3fa:	11 c0       	rjmp	.+34     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 3fc:	77 23       	and	r23, r23
 3fe:	21 f0       	breq	.+8      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 400:	9e e8       	ldi	r25, 0x8E	; 142
 402:	87 2f       	mov	r24, r23
 404:	76 2f       	mov	r23, r22
 406:	05 c0       	rjmp	.+10     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 408:	66 23       	and	r22, r22
 40a:	71 f0       	breq	.+28     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 40c:	96 e8       	ldi	r25, 0x86	; 134
 40e:	86 2f       	mov	r24, r22
 410:	70 e0       	ldi	r23, 0x00	; 0
 412:	60 e0       	ldi	r22, 0x00	; 0
 414:	2a f0       	brmi	.+10     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 416:	9a 95       	dec	r25
 418:	66 0f       	add	r22, r22
 41a:	77 1f       	adc	r23, r23
 41c:	88 1f       	adc	r24, r24
 41e:	da f7       	brpl	.-10     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 420:	88 0f       	add	r24, r24
 422:	96 95       	lsr	r25
 424:	87 95       	ror	r24
 426:	97 f9       	bld	r25, 7
 428:	08 95       	ret

0000042a <__fp_inf>:
 42a:	97 f9       	bld	r25, 7
 42c:	9f 67       	ori	r25, 0x7F	; 127
 42e:	80 e8       	ldi	r24, 0x80	; 128
 430:	70 e0       	ldi	r23, 0x00	; 0
 432:	60 e0       	ldi	r22, 0x00	; 0
 434:	08 95       	ret

00000436 <__fp_nan>:
 436:	9f ef       	ldi	r25, 0xFF	; 255
 438:	80 ec       	ldi	r24, 0xC0	; 192
 43a:	08 95       	ret

0000043c <__fp_pscA>:
 43c:	00 24       	eor	r0, r0
 43e:	0a 94       	dec	r0
 440:	16 16       	cp	r1, r22
 442:	17 06       	cpc	r1, r23
 444:	18 06       	cpc	r1, r24
 446:	09 06       	cpc	r0, r25
 448:	08 95       	ret

0000044a <__fp_pscB>:
 44a:	00 24       	eor	r0, r0
 44c:	0a 94       	dec	r0
 44e:	12 16       	cp	r1, r18
 450:	13 06       	cpc	r1, r19
 452:	14 06       	cpc	r1, r20
 454:	05 06       	cpc	r0, r21
 456:	08 95       	ret

00000458 <__fp_round>:
 458:	09 2e       	mov	r0, r25
 45a:	03 94       	inc	r0
 45c:	00 0c       	add	r0, r0
 45e:	11 f4       	brne	.+4      	; 0x464 <__fp_round+0xc>
 460:	88 23       	and	r24, r24
 462:	52 f0       	brmi	.+20     	; 0x478 <__fp_round+0x20>
 464:	bb 0f       	add	r27, r27
 466:	40 f4       	brcc	.+16     	; 0x478 <__fp_round+0x20>
 468:	bf 2b       	or	r27, r31
 46a:	11 f4       	brne	.+4      	; 0x470 <__fp_round+0x18>
 46c:	60 ff       	sbrs	r22, 0
 46e:	04 c0       	rjmp	.+8      	; 0x478 <__fp_round+0x20>
 470:	6f 5f       	subi	r22, 0xFF	; 255
 472:	7f 4f       	sbci	r23, 0xFF	; 255
 474:	8f 4f       	sbci	r24, 0xFF	; 255
 476:	9f 4f       	sbci	r25, 0xFF	; 255
 478:	08 95       	ret

0000047a <__fp_split3>:
 47a:	57 fd       	sbrc	r21, 7
 47c:	90 58       	subi	r25, 0x80	; 128
 47e:	44 0f       	add	r20, r20
 480:	55 1f       	adc	r21, r21
 482:	59 f0       	breq	.+22     	; 0x49a <__fp_splitA+0x10>
 484:	5f 3f       	cpi	r21, 0xFF	; 255
 486:	71 f0       	breq	.+28     	; 0x4a4 <__fp_splitA+0x1a>
 488:	47 95       	ror	r20

0000048a <__fp_splitA>:
 48a:	88 0f       	add	r24, r24
 48c:	97 fb       	bst	r25, 7
 48e:	99 1f       	adc	r25, r25
 490:	61 f0       	breq	.+24     	; 0x4aa <__fp_splitA+0x20>
 492:	9f 3f       	cpi	r25, 0xFF	; 255
 494:	79 f0       	breq	.+30     	; 0x4b4 <__fp_splitA+0x2a>
 496:	87 95       	ror	r24
 498:	08 95       	ret
 49a:	12 16       	cp	r1, r18
 49c:	13 06       	cpc	r1, r19
 49e:	14 06       	cpc	r1, r20
 4a0:	55 1f       	adc	r21, r21
 4a2:	f2 cf       	rjmp	.-28     	; 0x488 <__fp_split3+0xe>
 4a4:	46 95       	lsr	r20
 4a6:	f1 df       	rcall	.-30     	; 0x48a <__fp_splitA>
 4a8:	08 c0       	rjmp	.+16     	; 0x4ba <__fp_splitA+0x30>
 4aa:	16 16       	cp	r1, r22
 4ac:	17 06       	cpc	r1, r23
 4ae:	18 06       	cpc	r1, r24
 4b0:	99 1f       	adc	r25, r25
 4b2:	f1 cf       	rjmp	.-30     	; 0x496 <__fp_splitA+0xc>
 4b4:	86 95       	lsr	r24
 4b6:	71 05       	cpc	r23, r1
 4b8:	61 05       	cpc	r22, r1
 4ba:	08 94       	sec
 4bc:	08 95       	ret

000004be <__fp_zero>:
 4be:	e8 94       	clt

000004c0 <__fp_szero>:
 4c0:	bb 27       	eor	r27, r27
 4c2:	66 27       	eor	r22, r22
 4c4:	77 27       	eor	r23, r23
 4c6:	cb 01       	movw	r24, r22
 4c8:	97 f9       	bld	r25, 7
 4ca:	08 95       	ret

000004cc <__mulsf3>:
 4cc:	0e 94 79 02 	call	0x4f2	; 0x4f2 <__mulsf3x>
 4d0:	0c 94 2c 02 	jmp	0x458	; 0x458 <__fp_round>
 4d4:	0e 94 1e 02 	call	0x43c	; 0x43c <__fp_pscA>
 4d8:	38 f0       	brcs	.+14     	; 0x4e8 <__mulsf3+0x1c>
 4da:	0e 94 25 02 	call	0x44a	; 0x44a <__fp_pscB>
 4de:	20 f0       	brcs	.+8      	; 0x4e8 <__mulsf3+0x1c>
 4e0:	95 23       	and	r25, r21
 4e2:	11 f0       	breq	.+4      	; 0x4e8 <__mulsf3+0x1c>
 4e4:	0c 94 15 02 	jmp	0x42a	; 0x42a <__fp_inf>
 4e8:	0c 94 1b 02 	jmp	0x436	; 0x436 <__fp_nan>
 4ec:	11 24       	eor	r1, r1
 4ee:	0c 94 60 02 	jmp	0x4c0	; 0x4c0 <__fp_szero>

000004f2 <__mulsf3x>:
 4f2:	0e 94 3d 02 	call	0x47a	; 0x47a <__fp_split3>
 4f6:	70 f3       	brcs	.-36     	; 0x4d4 <__mulsf3+0x8>

000004f8 <__mulsf3_pse>:
 4f8:	95 9f       	mul	r25, r21
 4fa:	c1 f3       	breq	.-16     	; 0x4ec <__mulsf3+0x20>
 4fc:	95 0f       	add	r25, r21
 4fe:	50 e0       	ldi	r21, 0x00	; 0
 500:	55 1f       	adc	r21, r21
 502:	62 9f       	mul	r22, r18
 504:	f0 01       	movw	r30, r0
 506:	72 9f       	mul	r23, r18
 508:	bb 27       	eor	r27, r27
 50a:	f0 0d       	add	r31, r0
 50c:	b1 1d       	adc	r27, r1
 50e:	63 9f       	mul	r22, r19
 510:	aa 27       	eor	r26, r26
 512:	f0 0d       	add	r31, r0
 514:	b1 1d       	adc	r27, r1
 516:	aa 1f       	adc	r26, r26
 518:	64 9f       	mul	r22, r20
 51a:	66 27       	eor	r22, r22
 51c:	b0 0d       	add	r27, r0
 51e:	a1 1d       	adc	r26, r1
 520:	66 1f       	adc	r22, r22
 522:	82 9f       	mul	r24, r18
 524:	22 27       	eor	r18, r18
 526:	b0 0d       	add	r27, r0
 528:	a1 1d       	adc	r26, r1
 52a:	62 1f       	adc	r22, r18
 52c:	73 9f       	mul	r23, r19
 52e:	b0 0d       	add	r27, r0
 530:	a1 1d       	adc	r26, r1
 532:	62 1f       	adc	r22, r18
 534:	83 9f       	mul	r24, r19
 536:	a0 0d       	add	r26, r0
 538:	61 1d       	adc	r22, r1
 53a:	22 1f       	adc	r18, r18
 53c:	74 9f       	mul	r23, r20
 53e:	33 27       	eor	r19, r19
 540:	a0 0d       	add	r26, r0
 542:	61 1d       	adc	r22, r1
 544:	23 1f       	adc	r18, r19
 546:	84 9f       	mul	r24, r20
 548:	60 0d       	add	r22, r0
 54a:	21 1d       	adc	r18, r1
 54c:	82 2f       	mov	r24, r18
 54e:	76 2f       	mov	r23, r22
 550:	6a 2f       	mov	r22, r26
 552:	11 24       	eor	r1, r1
 554:	9f 57       	subi	r25, 0x7F	; 127
 556:	50 40       	sbci	r21, 0x00	; 0
 558:	9a f0       	brmi	.+38     	; 0x580 <__mulsf3_pse+0x88>
 55a:	f1 f0       	breq	.+60     	; 0x598 <__mulsf3_pse+0xa0>
 55c:	88 23       	and	r24, r24
 55e:	4a f0       	brmi	.+18     	; 0x572 <__mulsf3_pse+0x7a>
 560:	ee 0f       	add	r30, r30
 562:	ff 1f       	adc	r31, r31
 564:	bb 1f       	adc	r27, r27
 566:	66 1f       	adc	r22, r22
 568:	77 1f       	adc	r23, r23
 56a:	88 1f       	adc	r24, r24
 56c:	91 50       	subi	r25, 0x01	; 1
 56e:	50 40       	sbci	r21, 0x00	; 0
 570:	a9 f7       	brne	.-22     	; 0x55c <__mulsf3_pse+0x64>
 572:	9e 3f       	cpi	r25, 0xFE	; 254
 574:	51 05       	cpc	r21, r1
 576:	80 f0       	brcs	.+32     	; 0x598 <__mulsf3_pse+0xa0>
 578:	0c 94 15 02 	jmp	0x42a	; 0x42a <__fp_inf>
 57c:	0c 94 60 02 	jmp	0x4c0	; 0x4c0 <__fp_szero>
 580:	5f 3f       	cpi	r21, 0xFF	; 255
 582:	e4 f3       	brlt	.-8      	; 0x57c <__mulsf3_pse+0x84>
 584:	98 3e       	cpi	r25, 0xE8	; 232
 586:	d4 f3       	brlt	.-12     	; 0x57c <__mulsf3_pse+0x84>
 588:	86 95       	lsr	r24
 58a:	77 95       	ror	r23
 58c:	67 95       	ror	r22
 58e:	b7 95       	ror	r27
 590:	f7 95       	ror	r31
 592:	e7 95       	ror	r30
 594:	9f 5f       	subi	r25, 0xFF	; 255
 596:	c1 f7       	brne	.-16     	; 0x588 <__mulsf3_pse+0x90>
 598:	fe 2b       	or	r31, r30
 59a:	88 0f       	add	r24, r24
 59c:	91 1d       	adc	r25, r1
 59e:	96 95       	lsr	r25
 5a0:	87 95       	ror	r24
 5a2:	97 f9       	bld	r25, 7
 5a4:	08 95       	ret

000005a6 <_exit>:
 5a6:	f8 94       	cli

000005a8 <__stop_program>:
 5a8:	ff cf       	rjmp	.-2      	; 0x5a8 <__stop_program>
